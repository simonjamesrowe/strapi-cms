apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: strapi-uploads-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: strapi-cms
  labels:
    app: strapi-cms
spec:
  replicas: 1
  selector:
    matchLabels:
      app: strapi-cms
  template:
    metadata:
      labels:
        app: strapi-cms
    spec:
      volumes:
        - name: uploads
          persistentVolumeClaim:
            claimName: strapi-uploads-claim
      containers:
        - name: strapi-cms
          image: "docker.pkg.github.com/simonjamesrowe/strapi-cms/strapi-cms:{{version}}"
          ports:
            - containerPort: 1337
          env:
            - name: DATABASE_HOST
              value: mongodb.default.svc.cluster.local
            - name: DATABASE_NAME
              value: cms
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo
                  key: password
          volumeMounts:
            - mountPath: /app/public/uploads
              name: uploads
      imagePullSecrets:
        - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: strapi-cms
spec:
  selector:
    app: strapi-cms
  ports:
    - protocol: TCP
      port: 1337
      targetPort: 1337
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: strapi-admin
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/ingress.allow-http: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/app-root: /admin
    nginx.ingress.kubernetes.io/proxy-body-size: 20m
spec:
  rules:
    - host: content.simonjamesrowe.com
      http:
        paths:
          - path: /
            backend:
              serviceName: strapi-cms
              servicePort: 1337

  tls:
    - hosts:
        - content.simonjamesrowe.com
      secretName: wildcard-cert
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: strapi-api
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/ingress.allow-http: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  rules:
    - host: api.simonjamesrowe.com
      http:
        paths:
          - path: /blogs
            backend:
              serviceName: strapi-cms
              servicePort: 1337
          - path: /profiles
            backend:
              serviceName: strapi-cms
              servicePort: 1337
          - path: /uploads
            backend:
              serviceName: strapi-cms
              servicePort: 1337

  tls:
    - hosts:
        - api.simonjamesrowe.com
      secretName: wildcard-cert
